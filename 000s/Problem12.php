<?php


/*

	The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

	Let us list the factors of the first seven triangle numbers:
	1: 1
	3: 1,3
	6: 1,2,3,6
	10: 1,2,5,10
	15: 1,3,5,15
	21: 1,3,7,21
	28: 1,2,4,7,14,28

	We can see that 28 is the first triangle number to have over five divisors.

	What is the value of the first triangle number to have over five hundred divisors?

*/



$n = 3;
$dn = 2;
$factors = 0;

$n1 = NULL;
$dn1 = NULL;
$exp = NULL;
 
$prime = sieve(); 
 
 
while($factors <= 500)
{
	$n = $n+1;
	$n1 = $n;
	
	if($n1 % 2 == 0)
	{
		$n1 = $n1/2;
	}
	
	$dn1 = 1;
	
	for($i=0; $i<= end($prime); $i++)
	{
		if($prime[$i]*$prime[$i] > $n1)
		{
			$dn1 = 2*$dn1;
			break;
		}
		
		$exp = 1;
		while($n1 % $prime[$i] == 0)
		{
			$exp++;
			$n1 = $n1/$prime[$i];
		}
		
		if($exp > 1)
		{
			$dn1 = $dn1*$exp;
		}
		
		if($n1 == 1)
		{
			break;
		}	
	
	}
	
	$factors = $dn*$dn1;
	$dn = $dn1;
} 
 

echo $n*($n-1)/2;








function sieve()
{
	$limit = 10000;
	$sqrtlimit = sqrt($limit);
	$range = 0;
	$i = "";
	$sum = 0;
	
	while($range<$limit)
	{
		$i .= "11";
		$range += 2;
	}

	$n = 2;
	while($n < $sqrtlimit)
	{
		if ($i[$n])
		{
			$sqn = $n*$n;
			$k = $sqn;
			$i[$k]=0;

			while($k<=$limit)
			{
				$k += $n;
				$i[$k]=0;
			}
		}
		++$n;
	}
	
	$n = 1;
	while($n<$limit)
	{
		if($i[$n])
		{
			$primes[] = $n;
			$sum += $n;
		}
		
		$n+=2;
	}

	if($limit>=2)
	{
		$primes[0] = 2;
		$sum += 1;
	}
	
	return $primes;
}



?>